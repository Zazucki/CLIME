{
  "level1": {
    "e1": "ls COMMAND\n\nThe command ls prints out current working directory and the files within it.\nls has many options that will list different files, directories, and information.\nBelow are the options listed with what each option ( IE ls -a, ls -f) does.\n\n\nOPTIONS\n-l long format, displaying Unix file types, permissions, number of hard links, owner, group, size, last-modified date and filename \n-f do not sort. Useful for directories containing large numbers of files.\n-F appends a character revealing the nature of a file, for example, * for an executable, or / for a directory. Regular files have no suffix.\n-a lists all files in the given directory, including those whose names startwith \".\" (which are hidden files in Unix). By default, these files are excludedfrom the list.\n-R recursively lists subdirectories. The command ls -R / would therefore list all files.\n-d shows information about a symbolic link or directory, rather than about the link's target or listing the contents of a directory.\n-t sort the list of files by modification time\n-h print sizes in human readable format. (e.g., 1K, 234M, 2G, etc.) This option is not part of the POSIX standard, although implemented in several systems,e.g., GNU coreutils in 1997,FreeBSD 4.5 in 2002,and Solaris 9 in 2002.",
    "e2": "ls COMMAND\n\n-1 (the numeric digit one) force output to be one entry per line.",
    "e3": "cd COMMAND\n\nThe cd command, allows you to change your directory when working in your terminal.\nBelow are a few way you can use the cd command to your benefit.\n\n\nOPTIONS \n- cd by itself or cd ~ will always put you in your home directory.\n- cd . will leave you in the same directory you are currently in (i.e. your current directory won't change). This can be useful if your shell's internal code can't deal with the directory you are in being recreated; running cd . will place your shell in the recreated directory.\n-cd ~username will put you in username's home directory. ",
    "e4": "cd COMMAND\n\n-cd dir (without a /) will put you in a subdirectory; for example, if you are in /usr, typing cd bin will put you in /usr/bin, while cd /bin puts you in /bin.\n\n-cd .. will move you up one directory. So, if you are /usr/bin/tmp, cd .. moves you to /usr/bin, while cd ../.. moves you to /usr (i.e. up two levels). You can use this indirection to access subdirectories too. So, from /usr/bin/tmp, you can use cd ../../local to go to /usr/local.\n\n-cd - will switch you to the previous directory. For example, if you are in /usr/bin/tmp, and go to /etc, you can type cd - to go back to /usr/bin/tmp. You can use this to toggle back and forth between two directories.",
    "e5": "pwd COMMAND\n\n-This environment variable \"prints\" write your current working directory in standard output.\n-This command is helpful when needing path names or if you are lost in the directory.\n-Comes in hand with ls (another command) to help you move along within the directory.",
    "e6": "pwd COMMAND\n\nOptions for cd\n\npwd -P, this option will print your physical working path\npwd -L, this option will print your logical working path  ",
    "e7": "uname COMMAND\n\n-uname is a command that will output the name, version, and other information about the current machine in use and its OS.\n-An option for uname is uname -a which will output in the following format (Kernel name, network node hostname, kernel release date, kernel version, machine hardware name, hardware platform, operating system)",
    "e8": "uname COMMAND\n\nOther options for uname are as follows.\n\n-s prints the kernel name\n-n option: It prints the hostname of the network node (current computer)\n-r option: It prints the kernel release date.\n-v option: It prints the version of the current kernel.\n-m option: It prints the machine hardware name.\n-p option: It prints the type of the processor\n-i option: It prints the platform of the hardware.\n-o option: It prints the name of the operating system.",
    "e9": "sudo COMMAND\n\nsudo (Super User DO) command in Linux is generally used as a prefix of some command that only superuser are allowed to run. If you prefix \"sudo\" with any command, it will run that command with elevated privileges or in other words allow a user with proper permissions to execute a command as another user, such as the superuser. This is the equivalent of \"run as administrator\" option in Windows. The option of sudo lets us have multiple administrators.These users who can use the sudo command need to have an entry in the sudoers file located at \"/etc/sudoers\". Remember that to edit or view the sudoers file you have to use sudo command. To edit the sudoers file it is recommended to use \"visudo\" command. By default, sudo requires that users authenticate themselves with a password which is the user's password, not the root password itself.\n\n\nsudo has 15 different options when using the command here are a few of them and how they interact with your terminal.\n\n1. -V: The -V (version) option causes sudo to print the version number and exit. If the invoking user is already root, the -V option will print out a list of the defaults sudo was compiled with.\n2. -l: The -l (list) option will print out the commands allowed (and forbidden) the user on the current host.\n3. -h or –help: The -h (help) option causes sudo to print a usage message and exit.\n4. -v: If, given the -v (validate) option, sudo will update the user's timestamp, prompting for the user's password if necessary. This extends the sudo timeout for another 5 minutes (or as given in sudoers) but does not run a command. This does not give any output.\n5. -k: The -k (kill) option to sudo invalidates the user's timestamp.So, the next time sudo is run a password will be required. This option does not require a password and was added to allow a user to revoke sudo permissions from a .logout file.\n6. -K: Similar to the -k option, the -K (sure kill) option is used to remove the user's timestamp entirely. Likewise, this option does not require a password.\n7. -b: The -b (background) option tells sudo to run the given command in the background. Note that if you use the -b option you cannot use shell job control to manipulate the process.",
    "e10": "sudo COMMAND\n\nContinuation of the options for sudo\n\n\n8. -p:The -p (prompt) option allows you to override the default password prompt and use a custom one. The following percent ('%') escapes are supported: %u is expanded to the invoking user's login name; %U is expanded to the login name of the user the command will be run as (which defaults to root); %h is expanded to the local hostname without the domain name; %H is expanded to the local hostname including the domain name (only if the machine's hostname is fully qualified or the \"fqdn\" sudoers option is set); %% (two consecutive % characters) are collapsed into a single % character.\n9. -n: Use -n option as shown below, which will execute the command without prompting for the password. This is very helpful when we want to run some of the sudo commands as background jobs (or in a shell script), where we don’t want sudo to ask for the password. -n option stands for non-interactive.\n10. -u: The -u (user) option causes sudo to run the specified command as a user other than root. To specify a uid instead of a username, use #uid.\n11. -s: The -s (shell) option runs the shell specified by the SHELL environment variable if it is set or the shell as specified in the file passwd.\n12. -H: The -H (HOME) option sets the HOME environment variable to the home directory of the target user (root by default) as specified in passwd. By default, sudo does not modify HOME.\n13. -S: The -S (stdin) option causes sudo to read the password from standard input instead of the terminal device.\n14. -a: The -a (authentication type) option causes sudo to use the specified authentication type when validating the user, as allowed by /etc/login.conf. The system administrator may specify a list of sudo-specific authentication methods by adding an \"auth-sudo\" entry in /etc/login.conf.\n15. -: The - flag indicates that sudo should stop processing command line arguments. It is most useful in conjunction with the -s flag."
  },
  "level2": {
    "e1": "mv COMMAND\n\nmv stands for move. mv is used to move one or more files or directories from one place to another in file system like UNIX. It has two distinct functions:\n(i) It rename a file or folder.\n(ii) It moves group of files to different directory.No additional space is consumed on a disk during renaming. This command normally works silently means no prompt for confirmation.",
    "e2": "mv COMMAND\n\nThe Syntax for the mv command is as follows, with source being the source file and destination the destination file.\n\n\nSYNTAX:\nmv [Option] source destination",
    "e3": "rm COMMAND\n\nrm stands for remove here. rm command is used to remove objects such as files, directories, symbolic links and so on from the file system like UNIX. To be more precise, rm removes references to objects from the filesystem, where those objects might have had multiple references (for example, a file with two different names). By default, it does not remove directories.This command normally works silently and you should be very careful while running rm command because once you delete the files then you are not able to recover the contents of files and directories.",
    "e4": "rm COMMAND\n\nSYNTAX\nrm [OPTION]... FILE...",
    "e5": "mkdir COMMAND\n\nmkdir command in Linux allows the user to create directories (also referred to as folders in some operating systems ). This command can create multiple directories at once as well as set the permissions for the directories. It is important to note that the user executing this command must have enough permissions to create a directory in the parent directory, or he/she may recieve a 'permission denied' error.\nSyntax:\nmkdir [options...] [directories ...]\n\nOPTIONS for mkdir\n--version: It displays the version number, some information regarding the license and exits.\n--help: It displays the help related information and exits.\n-v or --verbose: It displays a message for every directory created.\n-p: A flag which enables the command to create parent directories as necessary. If the directories exist, no error is specified.",
    "e6": "mkdir COMMAND\n\nContinuation of mdkir options\n\n-m: This option is used to set the file modes, i.e. permissions, etc. for the created directories. The syntax of the mode is the same as the chmod command.\nSyntax:\nmkdir -m a=rwx [directories]",
    "e7": "rmdir COMMAND\n\nrmdir command is used remove empty directories from the filesystem in Linux. The rmdir command removes each and every directory specified in the command line only if these directories are empty. So if the specified directory has some directories or files in it then this cannot be removed by rmdir command.\nSyntax:\nrmdir [-p] [-v | -verbose] [-ignore-fail-on-non-empty] directories ...",
    "e8": "rmdir COMMAND\n\nOptions:\n-help: It will print the general syntax of the command along with the various options that can be used with the rmdir command as well as give a brief description about each option.\nrmdir -p: In this option each of the directory argument is treated as a pathname of which all components will be removed, if they are already empty, starting from the last component.\nrmdir -p: In this option each of the directory argument is treated as a pathname of which all components will be removed, if they are already empty, starting from the last component.\nrmdir -v, -verbose: This option displays verbose information for every directory being processed.\nrmdir -ignore-fail-on-non-empty: This option do not report a failure which occurs solely because a directory is non-empty. Normally, when rmdir is being instructed to remove a non-empty directory, it simply reports an error. This option consists of all those error messages.\nrmdir -version: This option is used to display the version information and exit.",
    "e9": "ip COMMAND\n\nCommand name (ip):\nUsed to perform many network administrations tasks.  It can perform several other tasks like configuring and modifying the default and static routing, setting up tunnel over IP, listing IP addresses and property information, modifying the status of the interface, assigning, deleting and setting up IP addresses and routes.\nSyntax for ip command ip [ OPTIONS ] OBJECT { COMMAND | help }",
    "e10": "ip COMMAND\n\nOptions for the ip command\n\n-address: This option is used to show all IP addresses associated on all network devices.ip address.\n-link: It is used to display link layer information, it will fetch characteristics of the link layer devices currently available. Any networking device which has a driver loaded can be classified as an available device.ip link.\n-route: This command helps you to see the route packets your network will take as set in your routing table. The first entry is the default route.ip route.\n-add: This is used to assign an IP address to an interface.ip a add (ip_address) dev interface.\n-up: This option enables a network interface.ip link set (interface)up.\n-monitor: This command can monitor and displays the state of devices, addresses and routes continuously.ip monitor.\n-help: This command is used as a help to know more about ip command.ip help.\n-neighbour: This command is used to view the MAC address of the devices connected to your system.ip neighbour\n"
  },
  "level3": {
    "e1": "tar COMMAND\n\ncommand name(tar)\n\nThe Linux 'tar' stands for tape archive, is used to create Archive and extract the Archive files. tar command in Linux is one of the important command which provides archiving functionality in Linux. We can use Linux tar command to create compressed or uncompressed Archive files and also maintain and modify them.\n\nSyntax for tar:\ntar [options] [archive-file] [file or directory to be archived]",
    "e2": "tar COMMAND\n\nOptions for the tar command.\n\n-c : Creates Archive.\n-x : Extract the archive.\n-f : creates archive with given filename.\n-t : displays or lists files in archived file.\n-u : archives and adds to an existing archive file.\n-v : Displays Verbose Information.\n-A : Concatenates the archive files.\n-z : zip, tells tar command that create tar file using gzip.\n-j : filter archive tar file using tbzip.\n-W : Verify a archive file.\n-r : update or add file or directory in already existed .tar file.",
    "e3": "zip COMMAND\n\nCommand name (zip)\n\nZIP is a compression and file packaging utility for Unix. Each file is stored in single .zip {.zip-filename} file with the extension .zip.\n\n-zip is used to compress the files to reduce file size and also used as file package utility. zip is available in many operating systems like unix, linux, windows etc.\n-If you have a limited bandwidth between two servers and want to transfer the files faster, then zip the files and transfer.\n-The zip program puts one or more compressed files into a single zip archive, along with information about the files (name, path, date, time of last modification, protection, and check information to verify file integrity). An entire directory structure can be packed into a zip archive with a single command.\n-Compression ratios of 2:1 to 3:1 are common for text files. zip has one compression method (deflation) and can also store files without compression. zip automatically chooses the better of the two for each file to be compressed.The program is useful for packaging a set of files for distribution; for archiving files; and for saving disk space by temporarily compressing unused files or directories.",
    "e4": "zip COMMAND\n\nSyntax for zip command:\nzip [options] zipfile files_list\n\nOptions for zip command.\n\n1. -d Option: Removes the file from the zip archive.  After creating a zip file, you can remove a file from the archive using the -d option.\n2.-u Option: Updates the file in the zip archive. This option can be used to update the specified list of files or add new files to the existing zip file. Update an existing entry in the zip archive only if it has been modified more recently than the version already in the zip archive.\n3. -m Option: Deletes the original files after zipping. Move the specified files into the zip archive actually, this deletes the target directories/files after making the specified zip archive. If a directory becomes empty after removal of the files, the directory is also removed. No deletions are done until zip has created the archive without error. This is useful for conserving disk space, but is potentially dangerous removing all input files.\n4.-r Option: To zip a directory recursively, use the -r option with the zip command and it will recursively zips the files in a directory. This option helps you to zip all the files present in the specified directory.\n5. -x Option: Exclude the files in creating the zip. Let say you are zipping all the files in the current directory and want to exclude some unwanted files. You can exclude these unwanted files using the -x option.\n6.-v Option: Verbose mode or print diagnostic version info. Normally, when applied to real operations, this option enables the display of a progress indicator during compression and requests verbose diagnostic info about zip file structure oddities.When -v is the only command line argument, and either stdin or stdout is not redirected to a file, a diagnostic screen is printed. In addition to the help screen header with program name, version, and release date, some pointers to the Info-ZIP home and distribution sites are given. Then, it shows information about the target environment (compiler type and version, OS version, compilation date and the enabled optional features used to create the zip executable.",
    "e5": "chown COMMAND\n\nDifferent users in the operating system have ownership and permission to ensure that the files are secure and put restrictions on who can modify the contents of the files. In Linux there are different users who use the system:\n\n-Each user has some properties associated with them, such as a user ID and a home directory. We can add users into a group to make the process of managing users easier.\n-A group can have zero or more users. A specified user can be associated with a \"default group\". It can also be a member of other groups on the system as well.",
    "e6": "chown COMMAND\n\nchown command's Ownership and Permissions:\nTo protect and secure files and directory in Linux we use permissions to control what a user can do with a file or directory. Linux uses three types of permissions:\n\n-Read: This permission allows the user to read files and in directories, it lets the user read directories and subdirectories stores in it.\n-Write: This permission allows a user to modify and delete a file. Also it allows a user to modify its contents (create, delete and rename files in it) for the directories. Unless the execute permission is not given to directories changes does do affect them.\n-Execute: The write permission on a file allows it to get executed. For example, if we have a file named php.sh so unless we don't give it execute permission it won't run.\n\n\nTypes of file Permissions:\nUser: These type of file permission affect the owner of the file.\nGroup: These type of file permission affect the group which owns the file. Instead of the group permissions, the user permissions will apply if the owner user is in this group.\nOther: These type of file permission affect all other users on the system.",
    "e7": "dd COMMAND\n\nCommand name: dd (commonly known as disk destroyer if not done properly)\n\n-   dd helps with being able to write from and to different files and disk, as well as being able to read from and to them.\n-   dd can be used as well as backing up boot sectors on a hard drive or fixed the amount of random data on a disk.",
    "e8": "dd COMMAND\n\nUses of dd command:\n\n   -can be used for common task like:\n   -data transfer\n   -master boot\n   -data modification\n   -disk wipe\n   -data recovery\n   -benchmarking drive performance\n   -generating a file with a randoms(data)",
    "e9": "df COMMAND\n\nCommand name: df (disk free)\n\n\n-df, disk free, prints out the available disk space for your file systems\n-with df there is options how you can have the information display\n-the most common option is df -h which is nicknamed disk free -human as it outputs the information that makes most sense to us humans like KB, MB, GB, and TB.\n-Below are the other options and their meanings on how they print out the information on disk space.",
    "e10": "df COMMAND\n\nOptions for df command:\n\n\n-   -k-   Use 1024-byte units, instead of the default 512-byte units, when writing space figures.\n-   -P-   Use a standard, portable, output format\n-   -t-   If XSI compliant, show allocated space as well\n-   -h-   Display in KB, MB, GB or TB.\n-   file-   Write the amount of free space of the file system containing the specified file"
  }
}